// Generated from c:\dev\workspaces\spa\Sidl\src\Grammar\Sidl.g4 by ANTLR 4.9.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class SidlLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.9.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, TYPE=31, FUNCTION=32, 
		STRUCT=33, MESSAGE=34, NODETYPE=35, NODE=36, META=37, IMPORT=38, INCLUDE=39, 
		PROPERTY=40, TOPIC=41, NAME=42, WORD=43, STRING=44, NORMALSTRING=45, CHARSTRING=46, 
		LONGSTRING=47, INTEGER=48, FLOAT=49, WHITESPACE=50, STMEND=51, COMMENT=52, 
		LINECOMMENT=53, SHEBANG=54;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
			"T__25", "T__26", "T__27", "T__28", "T__29", "TYPE", "FUNCTION", "STRUCT", 
			"MESSAGE", "NODETYPE", "NODE", "META", "IMPORT", "INCLUDE", "PROPERTY", 
			"TOPIC", "LOWERCASE", "UPPERCASE", "DIGIT", "NESTEDSTRING", "ESCAPESEQUENCE", 
			"SEMICOLON", "NEWLINE", "NAME", "WORD", "STRING", "NORMALSTRING", "CHARSTRING", 
			"LONGSTRING", "INTEGER", "FLOAT", "WHITESPACE", "STMEND", "COMMENT", 
			"LINECOMMENT", "SHEBANG"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'='", "'{'", "'}'", "'[]'", "'int'", "'float'", "'string'", "'bool'", 
			"','", "'null'", "'false'", "'true'", "'['", "']'", "'.'", "':'", "'('", 
			"')'", "'if'", "'else if'", "'else'", "'while'", "'for'", "'in'", "'return'", 
			"'=>'", "'name'", "'description'", "'input'", "'output'", "'type'", "'function'", 
			"'struct'", "'message'", "'nodetype'", "'node'", "'meta'", "'import'", 
			"'include'", "'property'", "'topic'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, "TYPE", "FUNCTION", "STRUCT", 
			"MESSAGE", "NODETYPE", "NODE", "META", "IMPORT", "INCLUDE", "PROPERTY", 
			"TOPIC", "NAME", "WORD", "STRING", "NORMALSTRING", "CHARSTRING", "LONGSTRING", 
			"INTEGER", "FLOAT", "WHITESPACE", "STMEND", "COMMENT", "LINECOMMENT", 
			"SHEBANG"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public SidlLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Sidl.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\28\u01ff\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\7\3\7\3\7"+
		"\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3"+
		"\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3"+
		"\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3"+
		"\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3"+
		"\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3"+
		"\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3"+
		"\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3"+
		"\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3"+
		"!\3!\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3"+
		"#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3\'\3"+
		"\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3"+
		")\3)\3*\3*\3*\3*\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3.\3.\3.\3.\7.\u015a\n"+
		".\f.\16.\u015d\13.\3.\5.\u0160\n.\3/\3/\3/\3/\5/\u0166\n/\3/\5/\u0169"+
		"\n/\3\60\3\60\3\61\3\61\3\61\5\61\u0170\n\61\3\62\3\62\7\62\u0174\n\62"+
		"\f\62\16\62\u0177\13\62\3\63\3\63\6\63\u017b\n\63\r\63\16\63\u017c\3\64"+
		"\3\64\7\64\u0181\n\64\f\64\16\64\u0184\13\64\3\64\3\64\3\65\3\65\3\65"+
		"\7\65\u018b\n\65\f\65\16\65\u018e\13\65\3\65\3\65\3\66\3\66\3\66\7\66"+
		"\u0195\n\66\f\66\16\66\u0198\13\66\3\66\3\66\3\67\3\67\3\67\3\67\38\6"+
		"8\u01a1\n8\r8\168\u01a2\39\69\u01a6\n9\r9\169\u01a7\39\39\69\u01ac\n9"+
		"\r9\169\u01ad\59\u01b0\n9\3:\6:\u01b3\n:\r:\16:\u01b4\3:\3:\3;\3;\7;\u01bb"+
		"\n;\f;\16;\u01be\13;\3;\6;\u01c1\n;\r;\16;\u01c2\5;\u01c5\n;\3<\3<\3<"+
		"\3<\3<\3<\3<\3<\3=\3=\3=\3=\7=\u01d3\n=\f=\16=\u01d6\13=\3=\3=\7=\u01da"+
		"\n=\f=\16=\u01dd\13=\3=\3=\7=\u01e1\n=\f=\16=\u01e4\13=\3=\3=\7=\u01e8"+
		"\n=\f=\16=\u01eb\13=\5=\u01ed\n=\3=\3=\3=\5=\u01f2\n=\3=\3=\3>\3>\3>\7"+
		">\u01f9\n>\f>\16>\u01fc\13>\3>\3>\4\u015b\u0182\2?\3\3\5\4\7\5\t\6\13"+
		"\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'"+
		"\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'"+
		"M(O)Q*S+U\2W\2Y\2[\2]\2_\2a\2c,e-g.i/k\60m\61o\62q\63s\64u\65w\66y\67"+
		"{8\3\2\20\3\2c|\3\2C\\\3\2\62;\f\2$$))^^cdhhppttvvxx||\4\2\f\f\17\17\5"+
		"\2C\\aac|\6\2\62;C\\aac|\4\2$$^^\4\2))^^\4\2..\60\60\4\2\13\13\"\"\6\2"+
		"\f\f\17\17??]]\5\2\f\f\17\17]]\4\3\f\f\17\17\2\u0215\2\3\3\2\2\2\2\5\3"+
		"\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2"+
		"\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3"+
		"\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'"+
		"\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63"+
		"\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2"+
		"?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3"+
		"\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2c\3\2\2\2\2e\3\2\2"+
		"\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2"+
		"s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\3}\3\2\2\2\5\177"+
		"\3\2\2\2\7\u0081\3\2\2\2\t\u0083\3\2\2\2\13\u0086\3\2\2\2\r\u008a\3\2"+
		"\2\2\17\u0090\3\2\2\2\21\u0097\3\2\2\2\23\u009c\3\2\2\2\25\u009e\3\2\2"+
		"\2\27\u00a3\3\2\2\2\31\u00a9\3\2\2\2\33\u00ae\3\2\2\2\35\u00b0\3\2\2\2"+
		"\37\u00b2\3\2\2\2!\u00b4\3\2\2\2#\u00b6\3\2\2\2%\u00b8\3\2\2\2\'\u00ba"+
		"\3\2\2\2)\u00bd\3\2\2\2+\u00c5\3\2\2\2-\u00ca\3\2\2\2/\u00d0\3\2\2\2\61"+
		"\u00d4\3\2\2\2\63\u00d7\3\2\2\2\65\u00de\3\2\2\2\67\u00e1\3\2\2\29\u00e6"+
		"\3\2\2\2;\u00f2\3\2\2\2=\u00f8\3\2\2\2?\u00ff\3\2\2\2A\u0104\3\2\2\2C"+
		"\u010d\3\2\2\2E\u0114\3\2\2\2G\u011c\3\2\2\2I\u0125\3\2\2\2K\u012a\3\2"+
		"\2\2M\u012f\3\2\2\2O\u0136\3\2\2\2Q\u013e\3\2\2\2S\u0147\3\2\2\2U\u014d"+
		"\3\2\2\2W\u014f\3\2\2\2Y\u0151\3\2\2\2[\u015f\3\2\2\2]\u0168\3\2\2\2_"+
		"\u016a\3\2\2\2a\u016f\3\2\2\2c\u0171\3\2\2\2e\u017a\3\2\2\2g\u017e\3\2"+
		"\2\2i\u0187\3\2\2\2k\u0191\3\2\2\2m\u019b\3\2\2\2o\u01a0\3\2\2\2q\u01a5"+
		"\3\2\2\2s\u01b2\3\2\2\2u\u01c4\3\2\2\2w\u01c6\3\2\2\2y\u01ce\3\2\2\2{"+
		"\u01f5\3\2\2\2}~\7?\2\2~\4\3\2\2\2\177\u0080\7}\2\2\u0080\6\3\2\2\2\u0081"+
		"\u0082\7\177\2\2\u0082\b\3\2\2\2\u0083\u0084\7]\2\2\u0084\u0085\7_\2\2"+
		"\u0085\n\3\2\2\2\u0086\u0087\7k\2\2\u0087\u0088\7p\2\2\u0088\u0089\7v"+
		"\2\2\u0089\f\3\2\2\2\u008a\u008b\7h\2\2\u008b\u008c\7n\2\2\u008c\u008d"+
		"\7q\2\2\u008d\u008e\7c\2\2\u008e\u008f\7v\2\2\u008f\16\3\2\2\2\u0090\u0091"+
		"\7u\2\2\u0091\u0092\7v\2\2\u0092\u0093\7t\2\2\u0093\u0094\7k\2\2\u0094"+
		"\u0095\7p\2\2\u0095\u0096\7i\2\2\u0096\20\3\2\2\2\u0097\u0098\7d\2\2\u0098"+
		"\u0099\7q\2\2\u0099\u009a\7q\2\2\u009a\u009b\7n\2\2\u009b\22\3\2\2\2\u009c"+
		"\u009d\7.\2\2\u009d\24\3\2\2\2\u009e\u009f\7p\2\2\u009f\u00a0\7w\2\2\u00a0"+
		"\u00a1\7n\2\2\u00a1\u00a2\7n\2\2\u00a2\26\3\2\2\2\u00a3\u00a4\7h\2\2\u00a4"+
		"\u00a5\7c\2\2\u00a5\u00a6\7n\2\2\u00a6\u00a7\7u\2\2\u00a7\u00a8\7g\2\2"+
		"\u00a8\30\3\2\2\2\u00a9\u00aa\7v\2\2\u00aa\u00ab\7t\2\2\u00ab\u00ac\7"+
		"w\2\2\u00ac\u00ad\7g\2\2\u00ad\32\3\2\2\2\u00ae\u00af\7]\2\2\u00af\34"+
		"\3\2\2\2\u00b0\u00b1\7_\2\2\u00b1\36\3\2\2\2\u00b2\u00b3\7\60\2\2\u00b3"+
		" \3\2\2\2\u00b4\u00b5\7<\2\2\u00b5\"\3\2\2\2\u00b6\u00b7\7*\2\2\u00b7"+
		"$\3\2\2\2\u00b8\u00b9\7+\2\2\u00b9&\3\2\2\2\u00ba\u00bb\7k\2\2\u00bb\u00bc"+
		"\7h\2\2\u00bc(\3\2\2\2\u00bd\u00be\7g\2\2\u00be\u00bf\7n\2\2\u00bf\u00c0"+
		"\7u\2\2\u00c0\u00c1\7g\2\2\u00c1\u00c2\7\"\2\2\u00c2\u00c3\7k\2\2\u00c3"+
		"\u00c4\7h\2\2\u00c4*\3\2\2\2\u00c5\u00c6\7g\2\2\u00c6\u00c7\7n\2\2\u00c7"+
		"\u00c8\7u\2\2\u00c8\u00c9\7g\2\2\u00c9,\3\2\2\2\u00ca\u00cb\7y\2\2\u00cb"+
		"\u00cc\7j\2\2\u00cc\u00cd\7k\2\2\u00cd\u00ce\7n\2\2\u00ce\u00cf\7g\2\2"+
		"\u00cf.\3\2\2\2\u00d0\u00d1\7h\2\2\u00d1\u00d2\7q\2\2\u00d2\u00d3\7t\2"+
		"\2\u00d3\60\3\2\2\2\u00d4\u00d5\7k\2\2\u00d5\u00d6\7p\2\2\u00d6\62\3\2"+
		"\2\2\u00d7\u00d8\7t\2\2\u00d8\u00d9\7g\2\2\u00d9\u00da\7v\2\2\u00da\u00db"+
		"\7w\2\2\u00db\u00dc\7t\2\2\u00dc\u00dd\7p\2\2\u00dd\64\3\2\2\2\u00de\u00df"+
		"\7?\2\2\u00df\u00e0\7@\2\2\u00e0\66\3\2\2\2\u00e1\u00e2\7p\2\2\u00e2\u00e3"+
		"\7c\2\2\u00e3\u00e4\7o\2\2\u00e4\u00e5\7g\2\2\u00e58\3\2\2\2\u00e6\u00e7"+
		"\7f\2\2\u00e7\u00e8\7g\2\2\u00e8\u00e9\7u\2\2\u00e9\u00ea\7e\2\2\u00ea"+
		"\u00eb\7t\2\2\u00eb\u00ec\7k\2\2\u00ec\u00ed\7r\2\2\u00ed\u00ee\7v\2\2"+
		"\u00ee\u00ef\7k\2\2\u00ef\u00f0\7q\2\2\u00f0\u00f1\7p\2\2\u00f1:\3\2\2"+
		"\2\u00f2\u00f3\7k\2\2\u00f3\u00f4\7p\2\2\u00f4\u00f5\7r\2\2\u00f5\u00f6"+
		"\7w\2\2\u00f6\u00f7\7v\2\2\u00f7<\3\2\2\2\u00f8\u00f9\7q\2\2\u00f9\u00fa"+
		"\7w\2\2\u00fa\u00fb\7v\2\2\u00fb\u00fc\7r\2\2\u00fc\u00fd\7w\2\2\u00fd"+
		"\u00fe\7v\2\2\u00fe>\3\2\2\2\u00ff\u0100\7v\2\2\u0100\u0101\7{\2\2\u0101"+
		"\u0102\7r\2\2\u0102\u0103\7g\2\2\u0103@\3\2\2\2\u0104\u0105\7h\2\2\u0105"+
		"\u0106\7w\2\2\u0106\u0107\7p\2\2\u0107\u0108\7e\2\2\u0108\u0109\7v\2\2"+
		"\u0109\u010a\7k\2\2\u010a\u010b\7q\2\2\u010b\u010c\7p\2\2\u010cB\3\2\2"+
		"\2\u010d\u010e\7u\2\2\u010e\u010f\7v\2\2\u010f\u0110\7t\2\2\u0110\u0111"+
		"\7w\2\2\u0111\u0112\7e\2\2\u0112\u0113\7v\2\2\u0113D\3\2\2\2\u0114\u0115"+
		"\7o\2\2\u0115\u0116\7g\2\2\u0116\u0117\7u\2\2\u0117\u0118\7u\2\2\u0118"+
		"\u0119\7c\2\2\u0119\u011a\7i\2\2\u011a\u011b\7g\2\2\u011bF\3\2\2\2\u011c"+
		"\u011d\7p\2\2\u011d\u011e\7q\2\2\u011e\u011f\7f\2\2\u011f\u0120\7g\2\2"+
		"\u0120\u0121\7v\2\2\u0121\u0122\7{\2\2\u0122\u0123\7r\2\2\u0123\u0124"+
		"\7g\2\2\u0124H\3\2\2\2\u0125\u0126\7p\2\2\u0126\u0127\7q\2\2\u0127\u0128"+
		"\7f\2\2\u0128\u0129\7g\2\2\u0129J\3\2\2\2\u012a\u012b\7o\2\2\u012b\u012c"+
		"\7g\2\2\u012c\u012d\7v\2\2\u012d\u012e\7c\2\2\u012eL\3\2\2\2\u012f\u0130"+
		"\7k\2\2\u0130\u0131\7o\2\2\u0131\u0132\7r\2\2\u0132\u0133\7q\2\2\u0133"+
		"\u0134\7t\2\2\u0134\u0135\7v\2\2\u0135N\3\2\2\2\u0136\u0137\7k\2\2\u0137"+
		"\u0138\7p\2\2\u0138\u0139\7e\2\2\u0139\u013a\7n\2\2\u013a\u013b\7w\2\2"+
		"\u013b\u013c\7f\2\2\u013c\u013d\7g\2\2\u013dP\3\2\2\2\u013e\u013f\7r\2"+
		"\2\u013f\u0140\7t\2\2\u0140\u0141\7q\2\2\u0141\u0142\7r\2\2\u0142\u0143"+
		"\7g\2\2\u0143\u0144\7t\2\2\u0144\u0145\7v\2\2\u0145\u0146\7{\2\2\u0146"+
		"R\3\2\2\2\u0147\u0148\7v\2\2\u0148\u0149\7q\2\2\u0149\u014a\7r\2\2\u014a"+
		"\u014b\7k\2\2\u014b\u014c\7e\2\2\u014cT\3\2\2\2\u014d\u014e\t\2\2\2\u014e"+
		"V\3\2\2\2\u014f\u0150\t\3\2\2\u0150X\3\2\2\2\u0151\u0152\t\4\2\2\u0152"+
		"Z\3\2\2\2\u0153\u0154\7?\2\2\u0154\u0155\5[.\2\u0155\u0156\7?\2\2\u0156"+
		"\u0160\3\2\2\2\u0157\u015b\7]\2\2\u0158\u015a\13\2\2\2\u0159\u0158\3\2"+
		"\2\2\u015a\u015d\3\2\2\2\u015b\u015c\3\2\2\2\u015b\u0159\3\2\2\2\u015c"+
		"\u015e\3\2\2\2\u015d\u015b\3\2\2\2\u015e\u0160\7_\2\2\u015f\u0153\3\2"+
		"\2\2\u015f\u0157\3\2\2\2\u0160\\\3\2\2\2\u0161\u0162\7^\2\2\u0162\u0169"+
		"\t\5\2\2\u0163\u0165\7^\2\2\u0164\u0166\7\17\2\2\u0165\u0164\3\2\2\2\u0165"+
		"\u0166\3\2\2\2\u0166\u0167\3\2\2\2\u0167\u0169\7\f\2\2\u0168\u0161\3\2"+
		"\2\2\u0168\u0163\3\2\2\2\u0169^\3\2\2\2\u016a\u016b\7=\2\2\u016b`\3\2"+
		"\2\2\u016c\u016d\7\17\2\2\u016d\u0170\7\f\2\2\u016e\u0170\t\6\2\2\u016f"+
		"\u016c\3\2\2\2\u016f\u016e\3\2\2\2\u0170b\3\2\2\2\u0171\u0175\t\7\2\2"+
		"\u0172\u0174\t\b\2\2\u0173\u0172\3\2\2\2\u0174\u0177\3\2\2\2\u0175\u0173"+
		"\3\2\2\2\u0175\u0176\3\2\2\2\u0176d\3\2\2\2\u0177\u0175\3\2\2\2\u0178"+
		"\u017b\5U+\2\u0179\u017b\5W,\2\u017a\u0178\3\2\2\2\u017a\u0179\3\2\2\2"+
		"\u017b\u017c\3\2\2\2\u017c\u017a\3\2\2\2\u017c\u017d\3\2\2\2\u017df\3"+
		"\2\2\2\u017e\u0182\7$\2\2\u017f\u0181\13\2\2\2\u0180\u017f\3\2\2\2\u0181"+
		"\u0184\3\2\2\2\u0182\u0183\3\2\2\2\u0182\u0180\3\2\2\2\u0183\u0185\3\2"+
		"\2\2\u0184\u0182\3\2\2\2\u0185\u0186\7$\2\2\u0186h\3\2\2\2\u0187\u018c"+
		"\7$\2\2\u0188\u018b\5]/\2\u0189\u018b\n\t\2\2\u018a\u0188\3\2\2\2\u018a"+
		"\u0189\3\2\2\2\u018b\u018e\3\2\2\2\u018c\u018a\3\2\2\2\u018c\u018d\3\2"+
		"\2\2\u018d\u018f\3\2\2\2\u018e\u018c\3\2\2\2\u018f\u0190\7$\2\2\u0190"+
		"j\3\2\2\2\u0191\u0196\7)\2\2\u0192\u0195\5]/\2\u0193\u0195\n\n\2\2\u0194"+
		"\u0192\3\2\2\2\u0194\u0193\3\2\2\2\u0195\u0198\3\2\2\2\u0196\u0194\3\2"+
		"\2\2\u0196\u0197\3\2\2\2\u0197\u0199\3\2\2\2\u0198\u0196\3\2\2\2\u0199"+
		"\u019a\7)\2\2\u019al\3\2\2\2\u019b\u019c\7]\2\2\u019c\u019d\5[.\2\u019d"+
		"\u019e\7_\2\2\u019en\3\2\2\2\u019f\u01a1\5Y-\2\u01a0\u019f\3\2\2\2\u01a1"+
		"\u01a2\3\2\2\2\u01a2\u01a0\3\2\2\2\u01a2\u01a3\3\2\2\2\u01a3p\3\2\2\2"+
		"\u01a4\u01a6\5Y-\2\u01a5\u01a4\3\2\2\2\u01a6\u01a7\3\2\2\2\u01a7\u01a5"+
		"\3\2\2\2\u01a7\u01a8\3\2\2\2\u01a8\u01af\3\2\2\2\u01a9\u01ab\t\13\2\2"+
		"\u01aa\u01ac\5Y-\2\u01ab\u01aa\3\2\2\2\u01ac\u01ad\3\2\2\2\u01ad\u01ab"+
		"\3\2\2\2\u01ad\u01ae\3\2\2\2\u01ae\u01b0\3\2\2\2\u01af\u01a9\3\2\2\2\u01af"+
		"\u01b0\3\2\2\2\u01b0r\3\2\2\2\u01b1\u01b3\t\f\2\2\u01b2\u01b1\3\2\2\2"+
		"\u01b3\u01b4\3\2\2\2\u01b4\u01b2\3\2\2\2\u01b4\u01b5\3\2\2\2\u01b5\u01b6"+
		"\3\2\2\2\u01b6\u01b7\b:\2\2\u01b7t\3\2\2\2\u01b8\u01bc\5_\60\2\u01b9\u01bb"+
		"\5a\61\2\u01ba\u01b9\3\2\2\2\u01bb\u01be\3\2\2\2\u01bc\u01ba\3\2\2\2\u01bc"+
		"\u01bd\3\2\2\2\u01bd\u01c5\3\2\2\2\u01be\u01bc\3\2\2\2\u01bf\u01c1\5a"+
		"\61\2\u01c0\u01bf\3\2\2\2\u01c1\u01c2\3\2\2\2\u01c2\u01c0\3\2\2\2\u01c2"+
		"\u01c3\3\2\2\2\u01c3\u01c5\3\2\2\2\u01c4\u01b8\3\2\2\2\u01c4\u01c0\3\2"+
		"\2\2\u01c5v\3\2\2\2\u01c6\u01c7\7%\2\2\u01c7\u01c8\7]\2\2\u01c8\u01c9"+
		"\3\2\2\2\u01c9\u01ca\5[.\2\u01ca\u01cb\7_\2\2\u01cb\u01cc\3\2\2\2\u01cc"+
		"\u01cd\b<\3\2\u01cdx\3\2\2\2\u01ce\u01ec\7%\2\2\u01cf\u01ed\3\2\2\2\u01d0"+
		"\u01d4\7]\2\2\u01d1\u01d3\7?\2\2\u01d2\u01d1\3\2\2\2\u01d3\u01d6\3\2\2"+
		"\2\u01d4\u01d2\3\2\2\2\u01d4\u01d5\3\2\2\2\u01d5\u01ed\3\2\2\2\u01d6\u01d4"+
		"\3\2\2\2\u01d7\u01db\7]\2\2\u01d8\u01da\7?\2\2\u01d9\u01d8\3\2\2\2\u01da"+
		"\u01dd\3\2\2\2\u01db\u01d9\3\2\2\2\u01db\u01dc\3\2\2\2\u01dc\u01de\3\2"+
		"\2\2\u01dd\u01db\3\2\2\2\u01de\u01e2\n\r\2\2\u01df\u01e1\n\6\2\2\u01e0"+
		"\u01df\3\2\2\2\u01e1\u01e4\3\2\2\2\u01e2\u01e0\3\2\2\2\u01e2\u01e3\3\2"+
		"\2\2\u01e3\u01ed\3\2\2\2\u01e4\u01e2\3\2\2\2\u01e5\u01e9\n\16\2\2\u01e6"+
		"\u01e8\n\6\2\2\u01e7\u01e6\3\2\2\2\u01e8\u01eb\3\2\2\2\u01e9\u01e7\3\2"+
		"\2\2\u01e9\u01ea\3\2\2\2\u01ea\u01ed\3\2\2\2\u01eb\u01e9\3\2\2\2\u01ec"+
		"\u01cf\3\2\2\2\u01ec\u01d0\3\2\2\2\u01ec\u01d7\3\2\2\2\u01ec\u01e5\3\2"+
		"\2\2\u01ed\u01f1\3\2\2\2\u01ee\u01ef\7\17\2\2\u01ef\u01f2\7\f\2\2\u01f0"+
		"\u01f2\t\17\2\2\u01f1\u01ee\3\2\2\2\u01f1\u01f0\3\2\2\2\u01f2\u01f3\3"+
		"\2\2\2\u01f3\u01f4\b=\3\2\u01f4z\3\2\2\2\u01f5\u01f6\7%\2\2\u01f6\u01fa"+
		"\7#\2\2\u01f7\u01f9\n\6\2\2\u01f8\u01f7\3\2\2\2\u01f9\u01fc\3\2\2\2\u01fa"+
		"\u01f8\3\2\2\2\u01fa\u01fb\3\2\2\2\u01fb\u01fd\3\2\2\2\u01fc\u01fa\3\2"+
		"\2\2\u01fd\u01fe\b>\3\2\u01fe|\3\2\2\2\37\2\u015b\u015f\u0165\u0168\u016f"+
		"\u0175\u017a\u017c\u0182\u018a\u018c\u0194\u0196\u01a2\u01a7\u01ad\u01af"+
		"\u01b4\u01bc\u01c2\u01c4\u01d4\u01db\u01e2\u01e9\u01ec\u01f1\u01fa\4\b"+
		"\2\2\2\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}