//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:/dev/workspaces/spa/Ai.Hgb.Seidl/src/Grammar/SeidlLexer.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Ai.Hgb.Seidl.Processor {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class SeidlLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		ARRAY=1, STRING=2, INT=3, FLOAT=4, BOOL=5, STRUCT=6, MESSAGE=7, EDGETYPE=8, 
		NODETYPE=9, NODE=10, SURROGATE=11, META=12, FUNCTION=13, TYPEDEF=14, IMPORT=15, 
		INCLUDE=16, PROPERTY=17, TOPIC=18, INPUT=19, OUTPUT=20, CLIENT=21, SERVER=22, 
		PUBLISH=23, SUBSCRIBE=24, REQUEST=25, RESPONSE=26, PUB=27, SUB=28, REQ=29, 
		RES=30, AUX=31, NULL=32, TRUE=33, FALSE=34, IF=35, ELSE=36, ELSEIF=37, 
		FOR=38, IN=39, TO=40, WHILE=41, RETURN=42, AS=43, IMITATES=44, WITH=45, 
		LATEST=46, AUTO=47, LABEL=48, NAMEDEF=49, TAGDEF=50, PACKAGE=51, IMAGE=52, 
		QUEUE=53, VAR=54, COMMAND=55, SEQUENTIAL=56, PARALLEL=57, DOT=58, STAR=59, 
		COMMA=60, COLON=61, SEMI_COLON=62, ASSIGN=63, ADD=64, MINUS=65, DIV=66, 
		INTERPOLATION=67, ARROW=68, HEAVYARROW=69, QUERYARROW_BEGIN=70, QUERYHARROW_BEGIN=71, 
		QUERYARROW_END=72, QUERYHARROW_END=73, EQUAL=74, UNEQUAL=75, GREATERTHAN=76, 
		GREATEREQUALTHAN=77, LESSTHAN=78, LESSEQUALTHAN=79, AND=80, OR=81, NOT=82, 
		OPEN_PAREN=83, CLOSE_PAREN=84, OPEN_BRACE=85, CLOSE_BRACE=86, OPEN_BRACKET=87, 
		CLOSE_BRACKET=88, NAME=89, WORD=90, STRINGLITERAL=91, NORMALSTRING=92, 
		CHARSTRING=93, LONGSTRING=94, INTEGER=95, FLOATINGPOINTNUMBER=96, WHITESPACE=97, 
		STMEND=98, COMMENT=99, LINECOMMENT=100, SHEBANG=101;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"ARRAY", "STRING", "INT", "FLOAT", "BOOL", "STRUCT", "MESSAGE", "EDGETYPE", 
		"NODETYPE", "NODE", "SURROGATE", "META", "FUNCTION", "TYPEDEF", "IMPORT", 
		"INCLUDE", "PROPERTY", "TOPIC", "INPUT", "OUTPUT", "CLIENT", "SERVER", 
		"PUBLISH", "SUBSCRIBE", "REQUEST", "RESPONSE", "PUB", "SUB", "REQ", "RES", 
		"AUX", "NULL", "TRUE", "FALSE", "IF", "ELSE", "ELSEIF", "FOR", "IN", "TO", 
		"WHILE", "RETURN", "AS", "IMITATES", "WITH", "LATEST", "AUTO", "LABEL", 
		"NAMEDEF", "TAGDEF", "PACKAGE", "IMAGE", "QUEUE", "VAR", "COMMAND", "SEQUENTIAL", 
		"PARALLEL", "DOT", "STAR", "COMMA", "COLON", "SEMI_COLON", "ASSIGN", "ADD", 
		"MINUS", "DIV", "INTERPOLATION", "ARROW", "HEAVYARROW", "QUERYARROW_BEGIN", 
		"QUERYHARROW_BEGIN", "QUERYARROW_END", "QUERYHARROW_END", "EQUAL", "UNEQUAL", 
		"GREATERTHAN", "GREATEREQUALTHAN", "LESSTHAN", "LESSEQUALTHAN", "AND", 
		"OR", "NOT", "OPEN_PAREN", "CLOSE_PAREN", "OPEN_BRACE", "CLOSE_BRACE", 
		"OPEN_BRACKET", "CLOSE_BRACKET", "LOWERCASE", "UPPERCASE", "DIGIT", "NESTEDSTRING", 
		"ESCAPESEQUENCE", "SEMICOLON", "NEWLINE", "NAME", "WORD", "STRINGLITERAL", 
		"NORMALSTRING", "CHARSTRING", "LONGSTRING", "INTEGER", "FLOATINGPOINTNUMBER", 
		"WHITESPACE", "STMEND", "COMMENT", "LINECOMMENT", "SHEBANG"
	};


	public SeidlLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public SeidlLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'[]'", "'string'", "'int'", "'float'", "'bool'", "'struct'", "'message'", 
		"'edgetype'", "'nodetype'", "'node'", "'surrogate'", "'meta'", "'function'", 
		"'typedef'", "'import'", "'include'", "'property'", "'topic'", "'input'", 
		"'output'", "'client'", "'server'", "'publish'", "'subscribe'", "'request'", 
		"'response'", "'pub'", "'sub'", "'req'", "'res'", "'aux'", "'null'", "'true'", 
		"'false'", "'if'", "'else'", "'else if'", "'for'", "'in'", "'to'", "'while'", 
		"'return'", "'as'", "'imitates'", "'with'", "'latest'", "'auto'", "'label'", 
		"'name'", "'tag'", "'package'", "'image'", "'queue'", "'var'", "'command'", 
		"'sequential'", "'parallel'", "'.'", "'*'", "','", "':'", "';'", "'='", 
		"'+'", "'-'", "'/'", "'$'", "'-->'", "'==>'", "'-:'", "'=:'", "'->'", 
		"'=>'", "'=='", "'!='", "'>'", "'>='", "'<'", "'<='", "'and'", "'or'", 
		"'not'", "'('", "')'", "'{'", "'}'", "'['", "']'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "ARRAY", "STRING", "INT", "FLOAT", "BOOL", "STRUCT", "MESSAGE", 
		"EDGETYPE", "NODETYPE", "NODE", "SURROGATE", "META", "FUNCTION", "TYPEDEF", 
		"IMPORT", "INCLUDE", "PROPERTY", "TOPIC", "INPUT", "OUTPUT", "CLIENT", 
		"SERVER", "PUBLISH", "SUBSCRIBE", "REQUEST", "RESPONSE", "PUB", "SUB", 
		"REQ", "RES", "AUX", "NULL", "TRUE", "FALSE", "IF", "ELSE", "ELSEIF", 
		"FOR", "IN", "TO", "WHILE", "RETURN", "AS", "IMITATES", "WITH", "LATEST", 
		"AUTO", "LABEL", "NAMEDEF", "TAGDEF", "PACKAGE", "IMAGE", "QUEUE", "VAR", 
		"COMMAND", "SEQUENTIAL", "PARALLEL", "DOT", "STAR", "COMMA", "COLON", 
		"SEMI_COLON", "ASSIGN", "ADD", "MINUS", "DIV", "INTERPOLATION", "ARROW", 
		"HEAVYARROW", "QUERYARROW_BEGIN", "QUERYHARROW_BEGIN", "QUERYARROW_END", 
		"QUERYHARROW_END", "EQUAL", "UNEQUAL", "GREATERTHAN", "GREATEREQUALTHAN", 
		"LESSTHAN", "LESSEQUALTHAN", "AND", "OR", "NOT", "OPEN_PAREN", "CLOSE_PAREN", 
		"OPEN_BRACE", "CLOSE_BRACE", "OPEN_BRACKET", "CLOSE_BRACKET", "NAME", 
		"WORD", "STRINGLITERAL", "NORMALSTRING", "CHARSTRING", "LONGSTRING", "INTEGER", 
		"FLOATINGPOINTNUMBER", "WHITESPACE", "STMEND", "COMMENT", "LINECOMMENT", 
		"SHEBANG"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "SeidlLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static SeidlLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,101,832,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,
		7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,
		7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,
		7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,7,
		104,2,105,7,105,2,106,7,106,2,107,7,107,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,
		1,1,1,1,1,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,
		1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,
		7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,
		1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,
		1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,
		1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,
		1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,
		1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,
		1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,
		1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,
		1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,
		1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,
		1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,29,1,29,
		1,29,1,29,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,
		1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,35,1,35,1,35,
		1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,
		1,38,1,38,1,38,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,
		1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,
		1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,45,
		1,45,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,
		1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,
		1,50,1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,53,
		1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,
		1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,56,
		1,56,1,56,1,56,1,57,1,57,1,58,1,58,1,59,1,59,1,60,1,60,1,61,1,61,1,62,
		1,62,1,63,1,63,1,64,1,64,1,65,1,65,1,66,1,66,1,67,1,67,1,67,1,67,1,68,
		1,68,1,68,1,68,1,69,1,69,1,69,1,70,1,70,1,70,1,71,1,71,1,71,1,72,1,72,
		1,72,1,73,1,73,1,73,1,74,1,74,1,74,1,75,1,75,1,76,1,76,1,76,1,77,1,77,
		1,78,1,78,1,78,1,79,1,79,1,79,1,79,1,80,1,80,1,80,1,81,1,81,1,81,1,81,
		1,82,1,82,1,83,1,83,1,84,1,84,1,85,1,85,1,86,1,86,1,87,1,87,1,88,1,88,
		1,89,1,89,1,90,1,90,1,91,1,91,1,91,1,91,1,91,1,91,5,91,667,8,91,10,91,
		12,91,670,9,91,1,91,3,91,673,8,91,1,92,1,92,1,92,1,92,3,92,679,8,92,1,
		92,3,92,682,8,92,1,93,1,93,1,94,1,94,1,94,3,94,689,8,94,1,95,1,95,5,95,
		693,8,95,10,95,12,95,696,9,95,1,96,1,96,4,96,700,8,96,11,96,12,96,701,
		1,97,1,97,5,97,706,8,97,10,97,12,97,709,9,97,1,97,1,97,1,98,1,98,1,98,
		5,98,716,8,98,10,98,12,98,719,9,98,1,98,1,98,1,99,1,99,1,99,5,99,726,8,
		99,10,99,12,99,729,9,99,1,99,1,99,1,100,1,100,1,100,1,100,1,101,4,101,
		738,8,101,11,101,12,101,739,1,102,4,102,743,8,102,11,102,12,102,744,1,
		102,1,102,4,102,749,8,102,11,102,12,102,750,3,102,753,8,102,1,103,4,103,
		756,8,103,11,103,12,103,757,1,103,1,103,1,104,1,104,5,104,764,8,104,10,
		104,12,104,767,9,104,1,104,4,104,770,8,104,11,104,12,104,771,3,104,774,
		8,104,1,105,1,105,1,105,1,105,1,105,1,105,1,105,1,105,1,106,1,106,1,106,
		1,106,5,106,788,8,106,10,106,12,106,791,9,106,1,106,1,106,5,106,795,8,
		106,10,106,12,106,798,9,106,1,106,1,106,5,106,802,8,106,10,106,12,106,
		805,9,106,1,106,1,106,5,106,809,8,106,10,106,12,106,812,9,106,3,106,814,
		8,106,1,106,1,106,1,106,3,106,819,8,106,1,106,1,106,1,107,1,107,1,107,
		5,107,826,8,107,10,107,12,107,829,9,107,1,107,1,107,2,668,707,0,108,1,
		1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,
		15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,
		27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,
		39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,
		51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,
		61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,69,139,70,141,
		71,143,72,145,73,147,74,149,75,151,76,153,77,155,78,157,79,159,80,161,
		81,163,82,165,83,167,84,169,85,171,86,173,87,175,88,177,0,179,0,181,0,
		183,0,185,0,187,0,189,0,191,89,193,90,195,91,197,92,199,93,201,94,203,
		95,205,96,207,97,209,98,211,99,213,100,215,101,1,0,14,1,0,97,122,1,0,65,
		90,1,0,48,57,10,0,34,34,39,39,92,92,97,98,102,102,110,110,114,114,116,
		116,118,118,122,122,2,0,10,10,13,13,3,0,65,90,95,95,97,122,4,0,48,57,65,
		90,95,95,97,122,2,0,34,34,92,92,2,0,39,39,92,92,1,0,46,46,2,0,9,9,32,32,
		4,0,10,10,13,13,61,61,91,91,3,0,10,10,13,13,91,91,2,1,10,10,13,13,854,
		0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,
		0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
		1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,
		0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,
		1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,
		0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,
		1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,
		0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,
		1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,
		0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,
		0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,
		0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,
		0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,
		0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,
		0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,
		0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,
		0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,191,1,0,0,0,0,193,1,0,0,
		0,0,195,1,0,0,0,0,197,1,0,0,0,0,199,1,0,0,0,0,201,1,0,0,0,0,203,1,0,0,
		0,0,205,1,0,0,0,0,207,1,0,0,0,0,209,1,0,0,0,0,211,1,0,0,0,0,213,1,0,0,
		0,0,215,1,0,0,0,1,217,1,0,0,0,3,220,1,0,0,0,5,227,1,0,0,0,7,231,1,0,0,
		0,9,237,1,0,0,0,11,242,1,0,0,0,13,249,1,0,0,0,15,257,1,0,0,0,17,266,1,
		0,0,0,19,275,1,0,0,0,21,280,1,0,0,0,23,290,1,0,0,0,25,295,1,0,0,0,27,304,
		1,0,0,0,29,312,1,0,0,0,31,319,1,0,0,0,33,327,1,0,0,0,35,336,1,0,0,0,37,
		342,1,0,0,0,39,348,1,0,0,0,41,355,1,0,0,0,43,362,1,0,0,0,45,369,1,0,0,
		0,47,377,1,0,0,0,49,387,1,0,0,0,51,395,1,0,0,0,53,404,1,0,0,0,55,408,1,
		0,0,0,57,412,1,0,0,0,59,416,1,0,0,0,61,420,1,0,0,0,63,424,1,0,0,0,65,429,
		1,0,0,0,67,434,1,0,0,0,69,440,1,0,0,0,71,443,1,0,0,0,73,448,1,0,0,0,75,
		456,1,0,0,0,77,460,1,0,0,0,79,463,1,0,0,0,81,466,1,0,0,0,83,472,1,0,0,
		0,85,479,1,0,0,0,87,482,1,0,0,0,89,491,1,0,0,0,91,496,1,0,0,0,93,503,1,
		0,0,0,95,508,1,0,0,0,97,514,1,0,0,0,99,519,1,0,0,0,101,523,1,0,0,0,103,
		531,1,0,0,0,105,537,1,0,0,0,107,543,1,0,0,0,109,547,1,0,0,0,111,555,1,
		0,0,0,113,566,1,0,0,0,115,575,1,0,0,0,117,577,1,0,0,0,119,579,1,0,0,0,
		121,581,1,0,0,0,123,583,1,0,0,0,125,585,1,0,0,0,127,587,1,0,0,0,129,589,
		1,0,0,0,131,591,1,0,0,0,133,593,1,0,0,0,135,595,1,0,0,0,137,599,1,0,0,
		0,139,603,1,0,0,0,141,606,1,0,0,0,143,609,1,0,0,0,145,612,1,0,0,0,147,
		615,1,0,0,0,149,618,1,0,0,0,151,621,1,0,0,0,153,623,1,0,0,0,155,626,1,
		0,0,0,157,628,1,0,0,0,159,631,1,0,0,0,161,635,1,0,0,0,163,638,1,0,0,0,
		165,642,1,0,0,0,167,644,1,0,0,0,169,646,1,0,0,0,171,648,1,0,0,0,173,650,
		1,0,0,0,175,652,1,0,0,0,177,654,1,0,0,0,179,656,1,0,0,0,181,658,1,0,0,
		0,183,672,1,0,0,0,185,681,1,0,0,0,187,683,1,0,0,0,189,688,1,0,0,0,191,
		690,1,0,0,0,193,699,1,0,0,0,195,703,1,0,0,0,197,712,1,0,0,0,199,722,1,
		0,0,0,201,732,1,0,0,0,203,737,1,0,0,0,205,742,1,0,0,0,207,755,1,0,0,0,
		209,773,1,0,0,0,211,775,1,0,0,0,213,783,1,0,0,0,215,822,1,0,0,0,217,218,
		5,91,0,0,218,219,5,93,0,0,219,2,1,0,0,0,220,221,5,115,0,0,221,222,5,116,
		0,0,222,223,5,114,0,0,223,224,5,105,0,0,224,225,5,110,0,0,225,226,5,103,
		0,0,226,4,1,0,0,0,227,228,5,105,0,0,228,229,5,110,0,0,229,230,5,116,0,
		0,230,6,1,0,0,0,231,232,5,102,0,0,232,233,5,108,0,0,233,234,5,111,0,0,
		234,235,5,97,0,0,235,236,5,116,0,0,236,8,1,0,0,0,237,238,5,98,0,0,238,
		239,5,111,0,0,239,240,5,111,0,0,240,241,5,108,0,0,241,10,1,0,0,0,242,243,
		5,115,0,0,243,244,5,116,0,0,244,245,5,114,0,0,245,246,5,117,0,0,246,247,
		5,99,0,0,247,248,5,116,0,0,248,12,1,0,0,0,249,250,5,109,0,0,250,251,5,
		101,0,0,251,252,5,115,0,0,252,253,5,115,0,0,253,254,5,97,0,0,254,255,5,
		103,0,0,255,256,5,101,0,0,256,14,1,0,0,0,257,258,5,101,0,0,258,259,5,100,
		0,0,259,260,5,103,0,0,260,261,5,101,0,0,261,262,5,116,0,0,262,263,5,121,
		0,0,263,264,5,112,0,0,264,265,5,101,0,0,265,16,1,0,0,0,266,267,5,110,0,
		0,267,268,5,111,0,0,268,269,5,100,0,0,269,270,5,101,0,0,270,271,5,116,
		0,0,271,272,5,121,0,0,272,273,5,112,0,0,273,274,5,101,0,0,274,18,1,0,0,
		0,275,276,5,110,0,0,276,277,5,111,0,0,277,278,5,100,0,0,278,279,5,101,
		0,0,279,20,1,0,0,0,280,281,5,115,0,0,281,282,5,117,0,0,282,283,5,114,0,
		0,283,284,5,114,0,0,284,285,5,111,0,0,285,286,5,103,0,0,286,287,5,97,0,
		0,287,288,5,116,0,0,288,289,5,101,0,0,289,22,1,0,0,0,290,291,5,109,0,0,
		291,292,5,101,0,0,292,293,5,116,0,0,293,294,5,97,0,0,294,24,1,0,0,0,295,
		296,5,102,0,0,296,297,5,117,0,0,297,298,5,110,0,0,298,299,5,99,0,0,299,
		300,5,116,0,0,300,301,5,105,0,0,301,302,5,111,0,0,302,303,5,110,0,0,303,
		26,1,0,0,0,304,305,5,116,0,0,305,306,5,121,0,0,306,307,5,112,0,0,307,308,
		5,101,0,0,308,309,5,100,0,0,309,310,5,101,0,0,310,311,5,102,0,0,311,28,
		1,0,0,0,312,313,5,105,0,0,313,314,5,109,0,0,314,315,5,112,0,0,315,316,
		5,111,0,0,316,317,5,114,0,0,317,318,5,116,0,0,318,30,1,0,0,0,319,320,5,
		105,0,0,320,321,5,110,0,0,321,322,5,99,0,0,322,323,5,108,0,0,323,324,5,
		117,0,0,324,325,5,100,0,0,325,326,5,101,0,0,326,32,1,0,0,0,327,328,5,112,
		0,0,328,329,5,114,0,0,329,330,5,111,0,0,330,331,5,112,0,0,331,332,5,101,
		0,0,332,333,5,114,0,0,333,334,5,116,0,0,334,335,5,121,0,0,335,34,1,0,0,
		0,336,337,5,116,0,0,337,338,5,111,0,0,338,339,5,112,0,0,339,340,5,105,
		0,0,340,341,5,99,0,0,341,36,1,0,0,0,342,343,5,105,0,0,343,344,5,110,0,
		0,344,345,5,112,0,0,345,346,5,117,0,0,346,347,5,116,0,0,347,38,1,0,0,0,
		348,349,5,111,0,0,349,350,5,117,0,0,350,351,5,116,0,0,351,352,5,112,0,
		0,352,353,5,117,0,0,353,354,5,116,0,0,354,40,1,0,0,0,355,356,5,99,0,0,
		356,357,5,108,0,0,357,358,5,105,0,0,358,359,5,101,0,0,359,360,5,110,0,
		0,360,361,5,116,0,0,361,42,1,0,0,0,362,363,5,115,0,0,363,364,5,101,0,0,
		364,365,5,114,0,0,365,366,5,118,0,0,366,367,5,101,0,0,367,368,5,114,0,
		0,368,44,1,0,0,0,369,370,5,112,0,0,370,371,5,117,0,0,371,372,5,98,0,0,
		372,373,5,108,0,0,373,374,5,105,0,0,374,375,5,115,0,0,375,376,5,104,0,
		0,376,46,1,0,0,0,377,378,5,115,0,0,378,379,5,117,0,0,379,380,5,98,0,0,
		380,381,5,115,0,0,381,382,5,99,0,0,382,383,5,114,0,0,383,384,5,105,0,0,
		384,385,5,98,0,0,385,386,5,101,0,0,386,48,1,0,0,0,387,388,5,114,0,0,388,
		389,5,101,0,0,389,390,5,113,0,0,390,391,5,117,0,0,391,392,5,101,0,0,392,
		393,5,115,0,0,393,394,5,116,0,0,394,50,1,0,0,0,395,396,5,114,0,0,396,397,
		5,101,0,0,397,398,5,115,0,0,398,399,5,112,0,0,399,400,5,111,0,0,400,401,
		5,110,0,0,401,402,5,115,0,0,402,403,5,101,0,0,403,52,1,0,0,0,404,405,5,
		112,0,0,405,406,5,117,0,0,406,407,5,98,0,0,407,54,1,0,0,0,408,409,5,115,
		0,0,409,410,5,117,0,0,410,411,5,98,0,0,411,56,1,0,0,0,412,413,5,114,0,
		0,413,414,5,101,0,0,414,415,5,113,0,0,415,58,1,0,0,0,416,417,5,114,0,0,
		417,418,5,101,0,0,418,419,5,115,0,0,419,60,1,0,0,0,420,421,5,97,0,0,421,
		422,5,117,0,0,422,423,5,120,0,0,423,62,1,0,0,0,424,425,5,110,0,0,425,426,
		5,117,0,0,426,427,5,108,0,0,427,428,5,108,0,0,428,64,1,0,0,0,429,430,5,
		116,0,0,430,431,5,114,0,0,431,432,5,117,0,0,432,433,5,101,0,0,433,66,1,
		0,0,0,434,435,5,102,0,0,435,436,5,97,0,0,436,437,5,108,0,0,437,438,5,115,
		0,0,438,439,5,101,0,0,439,68,1,0,0,0,440,441,5,105,0,0,441,442,5,102,0,
		0,442,70,1,0,0,0,443,444,5,101,0,0,444,445,5,108,0,0,445,446,5,115,0,0,
		446,447,5,101,0,0,447,72,1,0,0,0,448,449,5,101,0,0,449,450,5,108,0,0,450,
		451,5,115,0,0,451,452,5,101,0,0,452,453,5,32,0,0,453,454,5,105,0,0,454,
		455,5,102,0,0,455,74,1,0,0,0,456,457,5,102,0,0,457,458,5,111,0,0,458,459,
		5,114,0,0,459,76,1,0,0,0,460,461,5,105,0,0,461,462,5,110,0,0,462,78,1,
		0,0,0,463,464,5,116,0,0,464,465,5,111,0,0,465,80,1,0,0,0,466,467,5,119,
		0,0,467,468,5,104,0,0,468,469,5,105,0,0,469,470,5,108,0,0,470,471,5,101,
		0,0,471,82,1,0,0,0,472,473,5,114,0,0,473,474,5,101,0,0,474,475,5,116,0,
		0,475,476,5,117,0,0,476,477,5,114,0,0,477,478,5,110,0,0,478,84,1,0,0,0,
		479,480,5,97,0,0,480,481,5,115,0,0,481,86,1,0,0,0,482,483,5,105,0,0,483,
		484,5,109,0,0,484,485,5,105,0,0,485,486,5,116,0,0,486,487,5,97,0,0,487,
		488,5,116,0,0,488,489,5,101,0,0,489,490,5,115,0,0,490,88,1,0,0,0,491,492,
		5,119,0,0,492,493,5,105,0,0,493,494,5,116,0,0,494,495,5,104,0,0,495,90,
		1,0,0,0,496,497,5,108,0,0,497,498,5,97,0,0,498,499,5,116,0,0,499,500,5,
		101,0,0,500,501,5,115,0,0,501,502,5,116,0,0,502,92,1,0,0,0,503,504,5,97,
		0,0,504,505,5,117,0,0,505,506,5,116,0,0,506,507,5,111,0,0,507,94,1,0,0,
		0,508,509,5,108,0,0,509,510,5,97,0,0,510,511,5,98,0,0,511,512,5,101,0,
		0,512,513,5,108,0,0,513,96,1,0,0,0,514,515,5,110,0,0,515,516,5,97,0,0,
		516,517,5,109,0,0,517,518,5,101,0,0,518,98,1,0,0,0,519,520,5,116,0,0,520,
		521,5,97,0,0,521,522,5,103,0,0,522,100,1,0,0,0,523,524,5,112,0,0,524,525,
		5,97,0,0,525,526,5,99,0,0,526,527,5,107,0,0,527,528,5,97,0,0,528,529,5,
		103,0,0,529,530,5,101,0,0,530,102,1,0,0,0,531,532,5,105,0,0,532,533,5,
		109,0,0,533,534,5,97,0,0,534,535,5,103,0,0,535,536,5,101,0,0,536,104,1,
		0,0,0,537,538,5,113,0,0,538,539,5,117,0,0,539,540,5,101,0,0,540,541,5,
		117,0,0,541,542,5,101,0,0,542,106,1,0,0,0,543,544,5,118,0,0,544,545,5,
		97,0,0,545,546,5,114,0,0,546,108,1,0,0,0,547,548,5,99,0,0,548,549,5,111,
		0,0,549,550,5,109,0,0,550,551,5,109,0,0,551,552,5,97,0,0,552,553,5,110,
		0,0,553,554,5,100,0,0,554,110,1,0,0,0,555,556,5,115,0,0,556,557,5,101,
		0,0,557,558,5,113,0,0,558,559,5,117,0,0,559,560,5,101,0,0,560,561,5,110,
		0,0,561,562,5,116,0,0,562,563,5,105,0,0,563,564,5,97,0,0,564,565,5,108,
		0,0,565,112,1,0,0,0,566,567,5,112,0,0,567,568,5,97,0,0,568,569,5,114,0,
		0,569,570,5,97,0,0,570,571,5,108,0,0,571,572,5,108,0,0,572,573,5,101,0,
		0,573,574,5,108,0,0,574,114,1,0,0,0,575,576,5,46,0,0,576,116,1,0,0,0,577,
		578,5,42,0,0,578,118,1,0,0,0,579,580,5,44,0,0,580,120,1,0,0,0,581,582,
		5,58,0,0,582,122,1,0,0,0,583,584,5,59,0,0,584,124,1,0,0,0,585,586,5,61,
		0,0,586,126,1,0,0,0,587,588,5,43,0,0,588,128,1,0,0,0,589,590,5,45,0,0,
		590,130,1,0,0,0,591,592,5,47,0,0,592,132,1,0,0,0,593,594,5,36,0,0,594,
		134,1,0,0,0,595,596,5,45,0,0,596,597,5,45,0,0,597,598,5,62,0,0,598,136,
		1,0,0,0,599,600,5,61,0,0,600,601,5,61,0,0,601,602,5,62,0,0,602,138,1,0,
		0,0,603,604,5,45,0,0,604,605,5,58,0,0,605,140,1,0,0,0,606,607,5,61,0,0,
		607,608,5,58,0,0,608,142,1,0,0,0,609,610,5,45,0,0,610,611,5,62,0,0,611,
		144,1,0,0,0,612,613,5,61,0,0,613,614,5,62,0,0,614,146,1,0,0,0,615,616,
		5,61,0,0,616,617,5,61,0,0,617,148,1,0,0,0,618,619,5,33,0,0,619,620,5,61,
		0,0,620,150,1,0,0,0,621,622,5,62,0,0,622,152,1,0,0,0,623,624,5,62,0,0,
		624,625,5,61,0,0,625,154,1,0,0,0,626,627,5,60,0,0,627,156,1,0,0,0,628,
		629,5,60,0,0,629,630,5,61,0,0,630,158,1,0,0,0,631,632,5,97,0,0,632,633,
		5,110,0,0,633,634,5,100,0,0,634,160,1,0,0,0,635,636,5,111,0,0,636,637,
		5,114,0,0,637,162,1,0,0,0,638,639,5,110,0,0,639,640,5,111,0,0,640,641,
		5,116,0,0,641,164,1,0,0,0,642,643,5,40,0,0,643,166,1,0,0,0,644,645,5,41,
		0,0,645,168,1,0,0,0,646,647,5,123,0,0,647,170,1,0,0,0,648,649,5,125,0,
		0,649,172,1,0,0,0,650,651,5,91,0,0,651,174,1,0,0,0,652,653,5,93,0,0,653,
		176,1,0,0,0,654,655,7,0,0,0,655,178,1,0,0,0,656,657,7,1,0,0,657,180,1,
		0,0,0,658,659,7,2,0,0,659,182,1,0,0,0,660,661,5,61,0,0,661,662,3,183,91,
		0,662,663,5,61,0,0,663,673,1,0,0,0,664,668,5,91,0,0,665,667,9,0,0,0,666,
		665,1,0,0,0,667,670,1,0,0,0,668,669,1,0,0,0,668,666,1,0,0,0,669,671,1,
		0,0,0,670,668,1,0,0,0,671,673,5,93,0,0,672,660,1,0,0,0,672,664,1,0,0,0,
		673,184,1,0,0,0,674,675,5,92,0,0,675,682,7,3,0,0,676,678,5,92,0,0,677,
		679,5,13,0,0,678,677,1,0,0,0,678,679,1,0,0,0,679,680,1,0,0,0,680,682,5,
		10,0,0,681,674,1,0,0,0,681,676,1,0,0,0,682,186,1,0,0,0,683,684,5,59,0,
		0,684,188,1,0,0,0,685,686,5,13,0,0,686,689,5,10,0,0,687,689,7,4,0,0,688,
		685,1,0,0,0,688,687,1,0,0,0,689,190,1,0,0,0,690,694,7,5,0,0,691,693,7,
		6,0,0,692,691,1,0,0,0,693,696,1,0,0,0,694,692,1,0,0,0,694,695,1,0,0,0,
		695,192,1,0,0,0,696,694,1,0,0,0,697,700,3,177,88,0,698,700,3,179,89,0,
		699,697,1,0,0,0,699,698,1,0,0,0,700,701,1,0,0,0,701,699,1,0,0,0,701,702,
		1,0,0,0,702,194,1,0,0,0,703,707,5,34,0,0,704,706,9,0,0,0,705,704,1,0,0,
		0,706,709,1,0,0,0,707,708,1,0,0,0,707,705,1,0,0,0,708,710,1,0,0,0,709,
		707,1,0,0,0,710,711,5,34,0,0,711,196,1,0,0,0,712,717,5,34,0,0,713,716,
		3,185,92,0,714,716,8,7,0,0,715,713,1,0,0,0,715,714,1,0,0,0,716,719,1,0,
		0,0,717,715,1,0,0,0,717,718,1,0,0,0,718,720,1,0,0,0,719,717,1,0,0,0,720,
		721,5,34,0,0,721,198,1,0,0,0,722,727,5,39,0,0,723,726,3,185,92,0,724,726,
		8,8,0,0,725,723,1,0,0,0,725,724,1,0,0,0,726,729,1,0,0,0,727,725,1,0,0,
		0,727,728,1,0,0,0,728,730,1,0,0,0,729,727,1,0,0,0,730,731,5,39,0,0,731,
		200,1,0,0,0,732,733,5,91,0,0,733,734,3,183,91,0,734,735,5,93,0,0,735,202,
		1,0,0,0,736,738,3,181,90,0,737,736,1,0,0,0,738,739,1,0,0,0,739,737,1,0,
		0,0,739,740,1,0,0,0,740,204,1,0,0,0,741,743,3,181,90,0,742,741,1,0,0,0,
		743,744,1,0,0,0,744,742,1,0,0,0,744,745,1,0,0,0,745,752,1,0,0,0,746,748,
		7,9,0,0,747,749,3,181,90,0,748,747,1,0,0,0,749,750,1,0,0,0,750,748,1,0,
		0,0,750,751,1,0,0,0,751,753,1,0,0,0,752,746,1,0,0,0,752,753,1,0,0,0,753,
		206,1,0,0,0,754,756,7,10,0,0,755,754,1,0,0,0,756,757,1,0,0,0,757,755,1,
		0,0,0,757,758,1,0,0,0,758,759,1,0,0,0,759,760,6,103,0,0,760,208,1,0,0,
		0,761,765,3,187,93,0,762,764,3,189,94,0,763,762,1,0,0,0,764,767,1,0,0,
		0,765,763,1,0,0,0,765,766,1,0,0,0,766,774,1,0,0,0,767,765,1,0,0,0,768,
		770,3,189,94,0,769,768,1,0,0,0,770,771,1,0,0,0,771,769,1,0,0,0,771,772,
		1,0,0,0,772,774,1,0,0,0,773,761,1,0,0,0,773,769,1,0,0,0,774,210,1,0,0,
		0,775,776,5,35,0,0,776,777,5,91,0,0,777,778,1,0,0,0,778,779,3,183,91,0,
		779,780,5,93,0,0,780,781,1,0,0,0,781,782,6,105,1,0,782,212,1,0,0,0,783,
		813,5,35,0,0,784,814,1,0,0,0,785,789,5,91,0,0,786,788,5,61,0,0,787,786,
		1,0,0,0,788,791,1,0,0,0,789,787,1,0,0,0,789,790,1,0,0,0,790,814,1,0,0,
		0,791,789,1,0,0,0,792,796,5,91,0,0,793,795,5,61,0,0,794,793,1,0,0,0,795,
		798,1,0,0,0,796,794,1,0,0,0,796,797,1,0,0,0,797,799,1,0,0,0,798,796,1,
		0,0,0,799,803,8,11,0,0,800,802,8,4,0,0,801,800,1,0,0,0,802,805,1,0,0,0,
		803,801,1,0,0,0,803,804,1,0,0,0,804,814,1,0,0,0,805,803,1,0,0,0,806,810,
		8,12,0,0,807,809,8,4,0,0,808,807,1,0,0,0,809,812,1,0,0,0,810,808,1,0,0,
		0,810,811,1,0,0,0,811,814,1,0,0,0,812,810,1,0,0,0,813,784,1,0,0,0,813,
		785,1,0,0,0,813,792,1,0,0,0,813,806,1,0,0,0,814,818,1,0,0,0,815,816,5,
		13,0,0,816,819,5,10,0,0,817,819,7,13,0,0,818,815,1,0,0,0,818,817,1,0,0,
		0,819,820,1,0,0,0,820,821,6,106,1,0,821,214,1,0,0,0,822,823,5,35,0,0,823,
		827,5,33,0,0,824,826,8,4,0,0,825,824,1,0,0,0,826,829,1,0,0,0,827,825,1,
		0,0,0,827,828,1,0,0,0,828,830,1,0,0,0,829,827,1,0,0,0,830,831,6,107,1,
		0,831,216,1,0,0,0,29,0,668,672,678,681,688,694,699,701,707,715,717,725,
		727,739,744,750,752,757,765,771,773,789,796,803,810,813,818,827,2,6,0,
		0,0,1,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace Ai.Hgb.Seidl.Processor
