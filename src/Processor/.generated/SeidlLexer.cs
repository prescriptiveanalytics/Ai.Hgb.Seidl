//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:/dev/workspaces/spa/Ai.Hgb.Seidl/src/Grammar/SeidlLexer.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Ai.Hgb.Seidl.Processor {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class SeidlLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		ARRAY=1, STRING=2, INT=3, FLOAT=4, BOOL=5, STRUCT=6, MESSAGE=7, EDGETYPE=8, 
		NODETYPE=9, NODE=10, SURROGATE=11, META=12, FUNCTION=13, TYPEDEF=14, IMPORT=15, 
		INCLUDE=16, PROPERTY=17, TOPIC=18, INPUT=19, OUTPUT=20, CLIENT=21, SERVER=22, 
		PUBLISH=23, SUBSCRIBE=24, REQUEST=25, RESPONSE=26, PUB=27, SUB=28, REQ=29, 
		RES=30, AUX=31, NULL=32, TRUE=33, FALSE=34, IF=35, ELSE=36, ELSEIF=37, 
		FOR=38, IN=39, TO=40, WHILE=41, RETURN=42, AS=43, IMITATES=44, WITH=45, 
		LATEST=46, NAMEDEF=47, TAGDEF=48, PACKAGE=49, IMAGE=50, QUEUE=51, VAR=52, 
		COMMAND=53, DOT=54, STAR=55, COMMA=56, COLON=57, SEMI_COLON=58, ASSIGN=59, 
		ADD=60, MINUS=61, DIV=62, ARROW=63, HEAVYARROW=64, QUERYARROW_BEGIN=65, 
		QUERYHARROW_BEGIN=66, QUERYARROW_END=67, QUERYHARROW_END=68, EQUAL=69, 
		UNEQUAL=70, GREATERTHAN=71, GREATEREQUALTHAN=72, LESSTHAN=73, LESSEQUALTHAN=74, 
		AND=75, OR=76, NOT=77, OPEN_PAREN=78, CLOSE_PAREN=79, OPEN_BRACE=80, CLOSE_BRACE=81, 
		OPEN_BRACKET=82, CLOSE_BRACKET=83, NAME=84, WORD=85, STRINGLITERAL=86, 
		NORMALSTRING=87, CHARSTRING=88, LONGSTRING=89, INTEGER=90, FLOATINGPOINTNUMBER=91, 
		WHITESPACE=92, STMEND=93, COMMENT=94, LINECOMMENT=95, SHEBANG=96;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"ARRAY", "STRING", "INT", "FLOAT", "BOOL", "STRUCT", "MESSAGE", "EDGETYPE", 
		"NODETYPE", "NODE", "SURROGATE", "META", "FUNCTION", "TYPEDEF", "IMPORT", 
		"INCLUDE", "PROPERTY", "TOPIC", "INPUT", "OUTPUT", "CLIENT", "SERVER", 
		"PUBLISH", "SUBSCRIBE", "REQUEST", "RESPONSE", "PUB", "SUB", "REQ", "RES", 
		"AUX", "NULL", "TRUE", "FALSE", "IF", "ELSE", "ELSEIF", "FOR", "IN", "TO", 
		"WHILE", "RETURN", "AS", "IMITATES", "WITH", "LATEST", "NAMEDEF", "TAGDEF", 
		"PACKAGE", "IMAGE", "QUEUE", "VAR", "COMMAND", "DOT", "STAR", "COMMA", 
		"COLON", "SEMI_COLON", "ASSIGN", "ADD", "MINUS", "DIV", "ARROW", "HEAVYARROW", 
		"QUERYARROW_BEGIN", "QUERYHARROW_BEGIN", "QUERYARROW_END", "QUERYHARROW_END", 
		"EQUAL", "UNEQUAL", "GREATERTHAN", "GREATEREQUALTHAN", "LESSTHAN", "LESSEQUALTHAN", 
		"AND", "OR", "NOT", "OPEN_PAREN", "CLOSE_PAREN", "OPEN_BRACE", "CLOSE_BRACE", 
		"OPEN_BRACKET", "CLOSE_BRACKET", "LOWERCASE", "UPPERCASE", "DIGIT", "NESTEDSTRING", 
		"ESCAPESEQUENCE", "SEMICOLON", "NEWLINE", "NAME", "WORD", "STRINGLITERAL", 
		"NORMALSTRING", "CHARSTRING", "LONGSTRING", "INTEGER", "FLOATINGPOINTNUMBER", 
		"WHITESPACE", "STMEND", "COMMENT", "LINECOMMENT", "SHEBANG"
	};


	public SeidlLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public SeidlLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'[]'", "'string'", "'int'", "'float'", "'bool'", "'struct'", "'message'", 
		"'edgetype'", "'nodetype'", "'node'", "'surrogate'", "'meta'", "'function'", 
		"'typedef'", "'import'", "'include'", "'property'", "'topic'", "'input'", 
		"'output'", "'client'", "'server'", "'publish'", "'subscribe'", "'request'", 
		"'response'", "'pub'", "'sub'", "'req'", "'res'", "'aux'", "'null'", "'true'", 
		"'false'", "'if'", "'else'", "'else if'", "'for'", "'in'", "'to'", "'while'", 
		"'return'", "'as'", "'imitates'", "'with'", "'latest'", "'name'", "'tag'", 
		"'package'", "'image'", "'queue'", "'var'", "'command'", "'.'", "'*'", 
		"','", "':'", "';'", "'='", "'+'", "'-'", "'/'", "'-->'", "'==>'", "'-:'", 
		"'=:'", "'->'", "'=>'", "'=='", "'!='", "'>'", "'>='", "'<'", "'<='", 
		"'and'", "'or'", "'not'", "'('", "')'", "'{'", "'}'", "'['", "']'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "ARRAY", "STRING", "INT", "FLOAT", "BOOL", "STRUCT", "MESSAGE", 
		"EDGETYPE", "NODETYPE", "NODE", "SURROGATE", "META", "FUNCTION", "TYPEDEF", 
		"IMPORT", "INCLUDE", "PROPERTY", "TOPIC", "INPUT", "OUTPUT", "CLIENT", 
		"SERVER", "PUBLISH", "SUBSCRIBE", "REQUEST", "RESPONSE", "PUB", "SUB", 
		"REQ", "RES", "AUX", "NULL", "TRUE", "FALSE", "IF", "ELSE", "ELSEIF", 
		"FOR", "IN", "TO", "WHILE", "RETURN", "AS", "IMITATES", "WITH", "LATEST", 
		"NAMEDEF", "TAGDEF", "PACKAGE", "IMAGE", "QUEUE", "VAR", "COMMAND", "DOT", 
		"STAR", "COMMA", "COLON", "SEMI_COLON", "ASSIGN", "ADD", "MINUS", "DIV", 
		"ARROW", "HEAVYARROW", "QUERYARROW_BEGIN", "QUERYHARROW_BEGIN", "QUERYARROW_END", 
		"QUERYHARROW_END", "EQUAL", "UNEQUAL", "GREATERTHAN", "GREATEREQUALTHAN", 
		"LESSTHAN", "LESSEQUALTHAN", "AND", "OR", "NOT", "OPEN_PAREN", "CLOSE_PAREN", 
		"OPEN_BRACE", "CLOSE_BRACE", "OPEN_BRACKET", "CLOSE_BRACKET", "NAME", 
		"WORD", "STRINGLITERAL", "NORMALSTRING", "CHARSTRING", "LONGSTRING", "INTEGER", 
		"FLOATINGPOINTNUMBER", "WHITESPACE", "STMEND", "COMMENT", "LINECOMMENT", 
		"SHEBANG"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "SeidlLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static SeidlLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,96,789,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,
		7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,
		7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,
		7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,1,0,1,0,1,0,1,1,1,1,
		1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,
		4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,
		1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
		8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,
		1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,
		1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,
		1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,
		1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,
		1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,
		1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,
		1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,
		1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,
		1,25,1,25,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,
		1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,32,
		1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,35,
		1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,
		1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,40,
		1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,43,1,43,
		1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,
		1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,48,1,48,
		1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,
		1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,
		1,52,1,52,1,53,1,53,1,54,1,54,1,55,1,55,1,56,1,56,1,57,1,57,1,58,1,58,
		1,59,1,59,1,60,1,60,1,61,1,61,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,63,
		1,64,1,64,1,64,1,65,1,65,1,65,1,66,1,66,1,66,1,67,1,67,1,67,1,68,1,68,
		1,68,1,69,1,69,1,69,1,70,1,70,1,71,1,71,1,71,1,72,1,72,1,73,1,73,1,73,
		1,74,1,74,1,74,1,74,1,75,1,75,1,75,1,76,1,76,1,76,1,76,1,77,1,77,1,78,
		1,78,1,79,1,79,1,80,1,80,1,81,1,81,1,82,1,82,1,83,1,83,1,84,1,84,1,85,
		1,85,1,86,1,86,1,86,1,86,1,86,1,86,5,86,624,8,86,10,86,12,86,627,9,86,
		1,86,3,86,630,8,86,1,87,1,87,1,87,1,87,3,87,636,8,87,1,87,3,87,639,8,87,
		1,88,1,88,1,89,1,89,1,89,3,89,646,8,89,1,90,1,90,5,90,650,8,90,10,90,12,
		90,653,9,90,1,91,1,91,4,91,657,8,91,11,91,12,91,658,1,92,1,92,5,92,663,
		8,92,10,92,12,92,666,9,92,1,92,1,92,1,93,1,93,1,93,5,93,673,8,93,10,93,
		12,93,676,9,93,1,93,1,93,1,94,1,94,1,94,5,94,683,8,94,10,94,12,94,686,
		9,94,1,94,1,94,1,95,1,95,1,95,1,95,1,96,4,96,695,8,96,11,96,12,96,696,
		1,97,4,97,700,8,97,11,97,12,97,701,1,97,1,97,4,97,706,8,97,11,97,12,97,
		707,3,97,710,8,97,1,98,4,98,713,8,98,11,98,12,98,714,1,98,1,98,1,99,1,
		99,5,99,721,8,99,10,99,12,99,724,9,99,1,99,4,99,727,8,99,11,99,12,99,728,
		3,99,731,8,99,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,101,1,
		101,1,101,1,101,5,101,745,8,101,10,101,12,101,748,9,101,1,101,1,101,5,
		101,752,8,101,10,101,12,101,755,9,101,1,101,1,101,5,101,759,8,101,10,101,
		12,101,762,9,101,1,101,1,101,5,101,766,8,101,10,101,12,101,769,9,101,3,
		101,771,8,101,1,101,1,101,1,101,3,101,776,8,101,1,101,1,101,1,102,1,102,
		1,102,5,102,783,8,102,10,102,12,102,786,9,102,1,102,1,102,2,625,664,0,
		103,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,
		14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,
		26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,
		38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,
		50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,
		60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,69,139,
		70,141,71,143,72,145,73,147,74,149,75,151,76,153,77,155,78,157,79,159,
		80,161,81,163,82,165,83,167,0,169,0,171,0,173,0,175,0,177,0,179,0,181,
		84,183,85,185,86,187,87,189,88,191,89,193,90,195,91,197,92,199,93,201,
		94,203,95,205,96,1,0,14,1,0,97,122,1,0,65,90,1,0,48,57,10,0,34,34,39,39,
		92,92,97,98,102,102,110,110,114,114,116,116,118,118,122,122,2,0,10,10,
		13,13,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,2,0,34,34,92,
		92,2,0,39,39,92,92,1,0,46,46,2,0,9,9,32,32,4,0,10,10,13,13,61,61,91,91,
		3,0,10,10,13,13,91,91,2,1,10,10,13,13,811,0,1,1,0,0,0,0,3,1,0,0,0,0,5,
		1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,
		0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
		1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,
		0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,
		1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,
		0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,
		1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,
		0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,
		1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,
		0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,
		0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,
		0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,
		0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,
		0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,
		0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,
		0,0,0,165,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,0,187,1,0,
		0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,193,1,0,0,0,0,195,1,0,0,0,0,197,1,0,
		0,0,0,199,1,0,0,0,0,201,1,0,0,0,0,203,1,0,0,0,0,205,1,0,0,0,1,207,1,0,
		0,0,3,210,1,0,0,0,5,217,1,0,0,0,7,221,1,0,0,0,9,227,1,0,0,0,11,232,1,0,
		0,0,13,239,1,0,0,0,15,247,1,0,0,0,17,256,1,0,0,0,19,265,1,0,0,0,21,270,
		1,0,0,0,23,280,1,0,0,0,25,285,1,0,0,0,27,294,1,0,0,0,29,302,1,0,0,0,31,
		309,1,0,0,0,33,317,1,0,0,0,35,326,1,0,0,0,37,332,1,0,0,0,39,338,1,0,0,
		0,41,345,1,0,0,0,43,352,1,0,0,0,45,359,1,0,0,0,47,367,1,0,0,0,49,377,1,
		0,0,0,51,385,1,0,0,0,53,394,1,0,0,0,55,398,1,0,0,0,57,402,1,0,0,0,59,406,
		1,0,0,0,61,410,1,0,0,0,63,414,1,0,0,0,65,419,1,0,0,0,67,424,1,0,0,0,69,
		430,1,0,0,0,71,433,1,0,0,0,73,438,1,0,0,0,75,446,1,0,0,0,77,450,1,0,0,
		0,79,453,1,0,0,0,81,456,1,0,0,0,83,462,1,0,0,0,85,469,1,0,0,0,87,472,1,
		0,0,0,89,481,1,0,0,0,91,486,1,0,0,0,93,493,1,0,0,0,95,498,1,0,0,0,97,502,
		1,0,0,0,99,510,1,0,0,0,101,516,1,0,0,0,103,522,1,0,0,0,105,526,1,0,0,0,
		107,534,1,0,0,0,109,536,1,0,0,0,111,538,1,0,0,0,113,540,1,0,0,0,115,542,
		1,0,0,0,117,544,1,0,0,0,119,546,1,0,0,0,121,548,1,0,0,0,123,550,1,0,0,
		0,125,552,1,0,0,0,127,556,1,0,0,0,129,560,1,0,0,0,131,563,1,0,0,0,133,
		566,1,0,0,0,135,569,1,0,0,0,137,572,1,0,0,0,139,575,1,0,0,0,141,578,1,
		0,0,0,143,580,1,0,0,0,145,583,1,0,0,0,147,585,1,0,0,0,149,588,1,0,0,0,
		151,592,1,0,0,0,153,595,1,0,0,0,155,599,1,0,0,0,157,601,1,0,0,0,159,603,
		1,0,0,0,161,605,1,0,0,0,163,607,1,0,0,0,165,609,1,0,0,0,167,611,1,0,0,
		0,169,613,1,0,0,0,171,615,1,0,0,0,173,629,1,0,0,0,175,638,1,0,0,0,177,
		640,1,0,0,0,179,645,1,0,0,0,181,647,1,0,0,0,183,656,1,0,0,0,185,660,1,
		0,0,0,187,669,1,0,0,0,189,679,1,0,0,0,191,689,1,0,0,0,193,694,1,0,0,0,
		195,699,1,0,0,0,197,712,1,0,0,0,199,730,1,0,0,0,201,732,1,0,0,0,203,740,
		1,0,0,0,205,779,1,0,0,0,207,208,5,91,0,0,208,209,5,93,0,0,209,2,1,0,0,
		0,210,211,5,115,0,0,211,212,5,116,0,0,212,213,5,114,0,0,213,214,5,105,
		0,0,214,215,5,110,0,0,215,216,5,103,0,0,216,4,1,0,0,0,217,218,5,105,0,
		0,218,219,5,110,0,0,219,220,5,116,0,0,220,6,1,0,0,0,221,222,5,102,0,0,
		222,223,5,108,0,0,223,224,5,111,0,0,224,225,5,97,0,0,225,226,5,116,0,0,
		226,8,1,0,0,0,227,228,5,98,0,0,228,229,5,111,0,0,229,230,5,111,0,0,230,
		231,5,108,0,0,231,10,1,0,0,0,232,233,5,115,0,0,233,234,5,116,0,0,234,235,
		5,114,0,0,235,236,5,117,0,0,236,237,5,99,0,0,237,238,5,116,0,0,238,12,
		1,0,0,0,239,240,5,109,0,0,240,241,5,101,0,0,241,242,5,115,0,0,242,243,
		5,115,0,0,243,244,5,97,0,0,244,245,5,103,0,0,245,246,5,101,0,0,246,14,
		1,0,0,0,247,248,5,101,0,0,248,249,5,100,0,0,249,250,5,103,0,0,250,251,
		5,101,0,0,251,252,5,116,0,0,252,253,5,121,0,0,253,254,5,112,0,0,254,255,
		5,101,0,0,255,16,1,0,0,0,256,257,5,110,0,0,257,258,5,111,0,0,258,259,5,
		100,0,0,259,260,5,101,0,0,260,261,5,116,0,0,261,262,5,121,0,0,262,263,
		5,112,0,0,263,264,5,101,0,0,264,18,1,0,0,0,265,266,5,110,0,0,266,267,5,
		111,0,0,267,268,5,100,0,0,268,269,5,101,0,0,269,20,1,0,0,0,270,271,5,115,
		0,0,271,272,5,117,0,0,272,273,5,114,0,0,273,274,5,114,0,0,274,275,5,111,
		0,0,275,276,5,103,0,0,276,277,5,97,0,0,277,278,5,116,0,0,278,279,5,101,
		0,0,279,22,1,0,0,0,280,281,5,109,0,0,281,282,5,101,0,0,282,283,5,116,0,
		0,283,284,5,97,0,0,284,24,1,0,0,0,285,286,5,102,0,0,286,287,5,117,0,0,
		287,288,5,110,0,0,288,289,5,99,0,0,289,290,5,116,0,0,290,291,5,105,0,0,
		291,292,5,111,0,0,292,293,5,110,0,0,293,26,1,0,0,0,294,295,5,116,0,0,295,
		296,5,121,0,0,296,297,5,112,0,0,297,298,5,101,0,0,298,299,5,100,0,0,299,
		300,5,101,0,0,300,301,5,102,0,0,301,28,1,0,0,0,302,303,5,105,0,0,303,304,
		5,109,0,0,304,305,5,112,0,0,305,306,5,111,0,0,306,307,5,114,0,0,307,308,
		5,116,0,0,308,30,1,0,0,0,309,310,5,105,0,0,310,311,5,110,0,0,311,312,5,
		99,0,0,312,313,5,108,0,0,313,314,5,117,0,0,314,315,5,100,0,0,315,316,5,
		101,0,0,316,32,1,0,0,0,317,318,5,112,0,0,318,319,5,114,0,0,319,320,5,111,
		0,0,320,321,5,112,0,0,321,322,5,101,0,0,322,323,5,114,0,0,323,324,5,116,
		0,0,324,325,5,121,0,0,325,34,1,0,0,0,326,327,5,116,0,0,327,328,5,111,0,
		0,328,329,5,112,0,0,329,330,5,105,0,0,330,331,5,99,0,0,331,36,1,0,0,0,
		332,333,5,105,0,0,333,334,5,110,0,0,334,335,5,112,0,0,335,336,5,117,0,
		0,336,337,5,116,0,0,337,38,1,0,0,0,338,339,5,111,0,0,339,340,5,117,0,0,
		340,341,5,116,0,0,341,342,5,112,0,0,342,343,5,117,0,0,343,344,5,116,0,
		0,344,40,1,0,0,0,345,346,5,99,0,0,346,347,5,108,0,0,347,348,5,105,0,0,
		348,349,5,101,0,0,349,350,5,110,0,0,350,351,5,116,0,0,351,42,1,0,0,0,352,
		353,5,115,0,0,353,354,5,101,0,0,354,355,5,114,0,0,355,356,5,118,0,0,356,
		357,5,101,0,0,357,358,5,114,0,0,358,44,1,0,0,0,359,360,5,112,0,0,360,361,
		5,117,0,0,361,362,5,98,0,0,362,363,5,108,0,0,363,364,5,105,0,0,364,365,
		5,115,0,0,365,366,5,104,0,0,366,46,1,0,0,0,367,368,5,115,0,0,368,369,5,
		117,0,0,369,370,5,98,0,0,370,371,5,115,0,0,371,372,5,99,0,0,372,373,5,
		114,0,0,373,374,5,105,0,0,374,375,5,98,0,0,375,376,5,101,0,0,376,48,1,
		0,0,0,377,378,5,114,0,0,378,379,5,101,0,0,379,380,5,113,0,0,380,381,5,
		117,0,0,381,382,5,101,0,0,382,383,5,115,0,0,383,384,5,116,0,0,384,50,1,
		0,0,0,385,386,5,114,0,0,386,387,5,101,0,0,387,388,5,115,0,0,388,389,5,
		112,0,0,389,390,5,111,0,0,390,391,5,110,0,0,391,392,5,115,0,0,392,393,
		5,101,0,0,393,52,1,0,0,0,394,395,5,112,0,0,395,396,5,117,0,0,396,397,5,
		98,0,0,397,54,1,0,0,0,398,399,5,115,0,0,399,400,5,117,0,0,400,401,5,98,
		0,0,401,56,1,0,0,0,402,403,5,114,0,0,403,404,5,101,0,0,404,405,5,113,0,
		0,405,58,1,0,0,0,406,407,5,114,0,0,407,408,5,101,0,0,408,409,5,115,0,0,
		409,60,1,0,0,0,410,411,5,97,0,0,411,412,5,117,0,0,412,413,5,120,0,0,413,
		62,1,0,0,0,414,415,5,110,0,0,415,416,5,117,0,0,416,417,5,108,0,0,417,418,
		5,108,0,0,418,64,1,0,0,0,419,420,5,116,0,0,420,421,5,114,0,0,421,422,5,
		117,0,0,422,423,5,101,0,0,423,66,1,0,0,0,424,425,5,102,0,0,425,426,5,97,
		0,0,426,427,5,108,0,0,427,428,5,115,0,0,428,429,5,101,0,0,429,68,1,0,0,
		0,430,431,5,105,0,0,431,432,5,102,0,0,432,70,1,0,0,0,433,434,5,101,0,0,
		434,435,5,108,0,0,435,436,5,115,0,0,436,437,5,101,0,0,437,72,1,0,0,0,438,
		439,5,101,0,0,439,440,5,108,0,0,440,441,5,115,0,0,441,442,5,101,0,0,442,
		443,5,32,0,0,443,444,5,105,0,0,444,445,5,102,0,0,445,74,1,0,0,0,446,447,
		5,102,0,0,447,448,5,111,0,0,448,449,5,114,0,0,449,76,1,0,0,0,450,451,5,
		105,0,0,451,452,5,110,0,0,452,78,1,0,0,0,453,454,5,116,0,0,454,455,5,111,
		0,0,455,80,1,0,0,0,456,457,5,119,0,0,457,458,5,104,0,0,458,459,5,105,0,
		0,459,460,5,108,0,0,460,461,5,101,0,0,461,82,1,0,0,0,462,463,5,114,0,0,
		463,464,5,101,0,0,464,465,5,116,0,0,465,466,5,117,0,0,466,467,5,114,0,
		0,467,468,5,110,0,0,468,84,1,0,0,0,469,470,5,97,0,0,470,471,5,115,0,0,
		471,86,1,0,0,0,472,473,5,105,0,0,473,474,5,109,0,0,474,475,5,105,0,0,475,
		476,5,116,0,0,476,477,5,97,0,0,477,478,5,116,0,0,478,479,5,101,0,0,479,
		480,5,115,0,0,480,88,1,0,0,0,481,482,5,119,0,0,482,483,5,105,0,0,483,484,
		5,116,0,0,484,485,5,104,0,0,485,90,1,0,0,0,486,487,5,108,0,0,487,488,5,
		97,0,0,488,489,5,116,0,0,489,490,5,101,0,0,490,491,5,115,0,0,491,492,5,
		116,0,0,492,92,1,0,0,0,493,494,5,110,0,0,494,495,5,97,0,0,495,496,5,109,
		0,0,496,497,5,101,0,0,497,94,1,0,0,0,498,499,5,116,0,0,499,500,5,97,0,
		0,500,501,5,103,0,0,501,96,1,0,0,0,502,503,5,112,0,0,503,504,5,97,0,0,
		504,505,5,99,0,0,505,506,5,107,0,0,506,507,5,97,0,0,507,508,5,103,0,0,
		508,509,5,101,0,0,509,98,1,0,0,0,510,511,5,105,0,0,511,512,5,109,0,0,512,
		513,5,97,0,0,513,514,5,103,0,0,514,515,5,101,0,0,515,100,1,0,0,0,516,517,
		5,113,0,0,517,518,5,117,0,0,518,519,5,101,0,0,519,520,5,117,0,0,520,521,
		5,101,0,0,521,102,1,0,0,0,522,523,5,118,0,0,523,524,5,97,0,0,524,525,5,
		114,0,0,525,104,1,0,0,0,526,527,5,99,0,0,527,528,5,111,0,0,528,529,5,109,
		0,0,529,530,5,109,0,0,530,531,5,97,0,0,531,532,5,110,0,0,532,533,5,100,
		0,0,533,106,1,0,0,0,534,535,5,46,0,0,535,108,1,0,0,0,536,537,5,42,0,0,
		537,110,1,0,0,0,538,539,5,44,0,0,539,112,1,0,0,0,540,541,5,58,0,0,541,
		114,1,0,0,0,542,543,5,59,0,0,543,116,1,0,0,0,544,545,5,61,0,0,545,118,
		1,0,0,0,546,547,5,43,0,0,547,120,1,0,0,0,548,549,5,45,0,0,549,122,1,0,
		0,0,550,551,5,47,0,0,551,124,1,0,0,0,552,553,5,45,0,0,553,554,5,45,0,0,
		554,555,5,62,0,0,555,126,1,0,0,0,556,557,5,61,0,0,557,558,5,61,0,0,558,
		559,5,62,0,0,559,128,1,0,0,0,560,561,5,45,0,0,561,562,5,58,0,0,562,130,
		1,0,0,0,563,564,5,61,0,0,564,565,5,58,0,0,565,132,1,0,0,0,566,567,5,45,
		0,0,567,568,5,62,0,0,568,134,1,0,0,0,569,570,5,61,0,0,570,571,5,62,0,0,
		571,136,1,0,0,0,572,573,5,61,0,0,573,574,5,61,0,0,574,138,1,0,0,0,575,
		576,5,33,0,0,576,577,5,61,0,0,577,140,1,0,0,0,578,579,5,62,0,0,579,142,
		1,0,0,0,580,581,5,62,0,0,581,582,5,61,0,0,582,144,1,0,0,0,583,584,5,60,
		0,0,584,146,1,0,0,0,585,586,5,60,0,0,586,587,5,61,0,0,587,148,1,0,0,0,
		588,589,5,97,0,0,589,590,5,110,0,0,590,591,5,100,0,0,591,150,1,0,0,0,592,
		593,5,111,0,0,593,594,5,114,0,0,594,152,1,0,0,0,595,596,5,110,0,0,596,
		597,5,111,0,0,597,598,5,116,0,0,598,154,1,0,0,0,599,600,5,40,0,0,600,156,
		1,0,0,0,601,602,5,41,0,0,602,158,1,0,0,0,603,604,5,123,0,0,604,160,1,0,
		0,0,605,606,5,125,0,0,606,162,1,0,0,0,607,608,5,91,0,0,608,164,1,0,0,0,
		609,610,5,93,0,0,610,166,1,0,0,0,611,612,7,0,0,0,612,168,1,0,0,0,613,614,
		7,1,0,0,614,170,1,0,0,0,615,616,7,2,0,0,616,172,1,0,0,0,617,618,5,61,0,
		0,618,619,3,173,86,0,619,620,5,61,0,0,620,630,1,0,0,0,621,625,5,91,0,0,
		622,624,9,0,0,0,623,622,1,0,0,0,624,627,1,0,0,0,625,626,1,0,0,0,625,623,
		1,0,0,0,626,628,1,0,0,0,627,625,1,0,0,0,628,630,5,93,0,0,629,617,1,0,0,
		0,629,621,1,0,0,0,630,174,1,0,0,0,631,632,5,92,0,0,632,639,7,3,0,0,633,
		635,5,92,0,0,634,636,5,13,0,0,635,634,1,0,0,0,635,636,1,0,0,0,636,637,
		1,0,0,0,637,639,5,10,0,0,638,631,1,0,0,0,638,633,1,0,0,0,639,176,1,0,0,
		0,640,641,5,59,0,0,641,178,1,0,0,0,642,643,5,13,0,0,643,646,5,10,0,0,644,
		646,7,4,0,0,645,642,1,0,0,0,645,644,1,0,0,0,646,180,1,0,0,0,647,651,7,
		5,0,0,648,650,7,6,0,0,649,648,1,0,0,0,650,653,1,0,0,0,651,649,1,0,0,0,
		651,652,1,0,0,0,652,182,1,0,0,0,653,651,1,0,0,0,654,657,3,167,83,0,655,
		657,3,169,84,0,656,654,1,0,0,0,656,655,1,0,0,0,657,658,1,0,0,0,658,656,
		1,0,0,0,658,659,1,0,0,0,659,184,1,0,0,0,660,664,5,34,0,0,661,663,9,0,0,
		0,662,661,1,0,0,0,663,666,1,0,0,0,664,665,1,0,0,0,664,662,1,0,0,0,665,
		667,1,0,0,0,666,664,1,0,0,0,667,668,5,34,0,0,668,186,1,0,0,0,669,674,5,
		34,0,0,670,673,3,175,87,0,671,673,8,7,0,0,672,670,1,0,0,0,672,671,1,0,
		0,0,673,676,1,0,0,0,674,672,1,0,0,0,674,675,1,0,0,0,675,677,1,0,0,0,676,
		674,1,0,0,0,677,678,5,34,0,0,678,188,1,0,0,0,679,684,5,39,0,0,680,683,
		3,175,87,0,681,683,8,8,0,0,682,680,1,0,0,0,682,681,1,0,0,0,683,686,1,0,
		0,0,684,682,1,0,0,0,684,685,1,0,0,0,685,687,1,0,0,0,686,684,1,0,0,0,687,
		688,5,39,0,0,688,190,1,0,0,0,689,690,5,91,0,0,690,691,3,173,86,0,691,692,
		5,93,0,0,692,192,1,0,0,0,693,695,3,171,85,0,694,693,1,0,0,0,695,696,1,
		0,0,0,696,694,1,0,0,0,696,697,1,0,0,0,697,194,1,0,0,0,698,700,3,171,85,
		0,699,698,1,0,0,0,700,701,1,0,0,0,701,699,1,0,0,0,701,702,1,0,0,0,702,
		709,1,0,0,0,703,705,7,9,0,0,704,706,3,171,85,0,705,704,1,0,0,0,706,707,
		1,0,0,0,707,705,1,0,0,0,707,708,1,0,0,0,708,710,1,0,0,0,709,703,1,0,0,
		0,709,710,1,0,0,0,710,196,1,0,0,0,711,713,7,10,0,0,712,711,1,0,0,0,713,
		714,1,0,0,0,714,712,1,0,0,0,714,715,1,0,0,0,715,716,1,0,0,0,716,717,6,
		98,0,0,717,198,1,0,0,0,718,722,3,177,88,0,719,721,3,179,89,0,720,719,1,
		0,0,0,721,724,1,0,0,0,722,720,1,0,0,0,722,723,1,0,0,0,723,731,1,0,0,0,
		724,722,1,0,0,0,725,727,3,179,89,0,726,725,1,0,0,0,727,728,1,0,0,0,728,
		726,1,0,0,0,728,729,1,0,0,0,729,731,1,0,0,0,730,718,1,0,0,0,730,726,1,
		0,0,0,731,200,1,0,0,0,732,733,5,35,0,0,733,734,5,91,0,0,734,735,1,0,0,
		0,735,736,3,173,86,0,736,737,5,93,0,0,737,738,1,0,0,0,738,739,6,100,1,
		0,739,202,1,0,0,0,740,770,5,35,0,0,741,771,1,0,0,0,742,746,5,91,0,0,743,
		745,5,61,0,0,744,743,1,0,0,0,745,748,1,0,0,0,746,744,1,0,0,0,746,747,1,
		0,0,0,747,771,1,0,0,0,748,746,1,0,0,0,749,753,5,91,0,0,750,752,5,61,0,
		0,751,750,1,0,0,0,752,755,1,0,0,0,753,751,1,0,0,0,753,754,1,0,0,0,754,
		756,1,0,0,0,755,753,1,0,0,0,756,760,8,11,0,0,757,759,8,4,0,0,758,757,1,
		0,0,0,759,762,1,0,0,0,760,758,1,0,0,0,760,761,1,0,0,0,761,771,1,0,0,0,
		762,760,1,0,0,0,763,767,8,12,0,0,764,766,8,4,0,0,765,764,1,0,0,0,766,769,
		1,0,0,0,767,765,1,0,0,0,767,768,1,0,0,0,768,771,1,0,0,0,769,767,1,0,0,
		0,770,741,1,0,0,0,770,742,1,0,0,0,770,749,1,0,0,0,770,763,1,0,0,0,771,
		775,1,0,0,0,772,773,5,13,0,0,773,776,5,10,0,0,774,776,7,13,0,0,775,772,
		1,0,0,0,775,774,1,0,0,0,776,777,1,0,0,0,777,778,6,101,1,0,778,204,1,0,
		0,0,779,780,5,35,0,0,780,784,5,33,0,0,781,783,8,4,0,0,782,781,1,0,0,0,
		783,786,1,0,0,0,784,782,1,0,0,0,784,785,1,0,0,0,785,787,1,0,0,0,786,784,
		1,0,0,0,787,788,6,102,1,0,788,206,1,0,0,0,29,0,625,629,635,638,645,651,
		656,658,664,672,674,682,684,696,701,707,709,714,722,728,730,746,753,760,
		767,770,775,784,2,6,0,0,0,1,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace Ai.Hgb.Seidl.Processor
